{"version":3,"sources":["./node_modules/ng-lazyload-image/fesm2020/ng-lazyload-image.mjs"],"names":["getNavigator","window","navigator","undefined","isChildOfPicture","element","Boolean","parentElement","nodeName","toLowerCase","isImageElement","setImage","imagePath","useSrcset","srcset","src","style","backgroundImage","setSources","attrName","image","sources","getElementsByTagName","i","length","attrValue","getAttribute","setSourcesToDefault","setSourcesToLazy","setSourcesToError","setImageAndSources","setSourcesFn","setImageAndSourcesToDefault","setImageAndSourcesToLazy","setImageAndSourcesToError","Hooks","constructor","setPlatformId","platformId","onDestroy","attributes","onAttributeChange","newAttributes","cssClassNames","loaded","loading","failed","removeCssClassName","cssClassName","className","replace","addCssClassName","includes","hasCssClassName","SharedHooks","setup","defaultImagePath","finally","loadImage","skipLazyLoading","decode","img","parentClone","parentNode","cloneNode","Image","referrerPolicy","sizes","then","Promise","resolve","reject","onload","onerror","setErrorImage","error","errorImagePath","setLoadedImage","isDisabled","isPlatformServer","isBot","userAgent","test","IntersectionObserverHooks","arguments","observers","WeakMap","intersectionSubject","Subject","uniqKey","getObservable","of","isIntersecting","customObservable","scrollContainerKey","scrollContainer","options","root","offset","rootMargin","observer","get","IntersectionObserver","entrys","loadingCallback","set","observe","Observable","obs","subscription","pipe","filter","entry","target","subscribe","unsubscribe","unobserve","isVisible","event","forEach","next","lazyLoadImage","hooks","evntObservable","tap","data","onStateChange","emit","reason","take","mergeMap","map","catchError","LAZYLOAD_IMAGE_HOOKS","InjectionToken","LazyLoadImageDirective","el","ngZone","EventEmitter","elementRef","propertyChanges$","ReplaySubject","uid","Math","random","toString","substr","ngOnChanges","debug","debugSubscription","e","console","log","nativeElement","lazyImage","defaultImage","errorImage","scrollTarget","id","ngAfterContentInit","runOutsideAngular","loadSubscription","switchMap","never","ngOnDestroy","ɵfac","i0","PLATFORM_ID","ɵdir","type","Directive","args","selector","ElementRef","NgZone","Object","decorators","Inject","Input","Output","LazyLoadImageModule","ɵmod","ɵinj","provide","useClass","NgModule","declarations","exports","providers","Rect","left","top","right","bottom","fromElement","getBoundingClientRect","empty","fromWindow","_window","innerWidth","innerHeight","inflate","inflateBy","intersectsWith","rect","getIntersectionWith","max","min","ScrollHooks","getWindow","scrollListeners","getScrollListener","addEventListener","warn","scrollListener","srollEvent","eventName","handler","passive","capture","removeEventListener","listener","sampleObservable","startWith","elementBounds","windowBounds","scrollContainerBounds","intersection","scheduler","sampleTime","share"],"mappings":"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","file":"default-node_modules_ng-lazyload-image_fesm2020_ng-lazyload-image_mjs.js","sourcesContent":["import { Subject, of, Observable, ReplaySubject, never, empty } from 'rxjs';\nimport { filter, tap, take, mergeMap, map, catchError, switchMap, startWith, sampleTime, share } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, PLATFORM_ID, Directive, Inject, Input, Output, NgModule } from '@angular/core';\n\nfunction getNavigator() {\n    return typeof window !== 'undefined' ? window.navigator : undefined;\n}\nfunction isChildOfPicture(element) {\n    return Boolean(element.parentElement && element.parentElement.nodeName.toLowerCase() === 'picture');\n}\nfunction isImageElement(element) {\n    return element.nodeName.toLowerCase() === 'img';\n}\nfunction setImage(element, imagePath, useSrcset) {\n    if (isImageElement(element)) {\n        if (useSrcset && 'srcset' in element) {\n            element.srcset = imagePath;\n        }\n        else {\n            element.src = imagePath;\n        }\n    }\n    else {\n        element.style.backgroundImage = `url('${imagePath}')`;\n    }\n    return element;\n}\nfunction setSources(attrName) {\n    return (image) => {\n        const sources = image.parentElement.getElementsByTagName('source');\n        for (let i = 0; i < sources.length; i++) {\n            const attrValue = sources[i].getAttribute(attrName);\n            if (attrValue) {\n                // Check if `srcset` is supported by the current browser\n                if ('srcset' in sources[i]) {\n                    sources[i].srcset = attrValue;\n                }\n                else {\n                    sources[i].src = attrValue;\n                }\n            }\n        }\n    };\n}\nconst setSourcesToDefault = setSources('defaultImage');\nconst setSourcesToLazy = setSources('lazyLoad');\nconst setSourcesToError = setSources('errorImage');\nfunction setImageAndSources(setSourcesFn) {\n    return (element, imagePath, useSrcset) => {\n        if (isImageElement(element) && isChildOfPicture(element)) {\n            setSourcesFn(element);\n        }\n        if (imagePath) {\n            setImage(element, imagePath, useSrcset);\n        }\n    };\n}\nconst setImageAndSourcesToDefault = setImageAndSources(setSourcesToDefault);\nconst setImageAndSourcesToLazy = setImageAndSources(setSourcesToLazy);\nconst setImageAndSourcesToError = setImageAndSources(setSourcesToError);\n\nclass Hooks {\n    constructor() {\n        this.navigator = getNavigator();\n    }\n    setPlatformId(platformId) {\n        this.platformId = platformId;\n    }\n    onDestroy(attributes) { }\n    onAttributeChange(newAttributes) { }\n}\n\nconst cssClassNames = {\n    loaded: 'ng-lazyloaded',\n    loading: 'ng-lazyloading',\n    failed: 'ng-failed-lazyloaded',\n};\nfunction removeCssClassName(element, cssClassName) {\n    element.className = element.className.replace(cssClassName, '');\n}\nfunction addCssClassName(element, cssClassName) {\n    if (!element.className.includes(cssClassName)) {\n        element.className += ` ${cssClassName}`;\n    }\n}\nfunction hasCssClassName(element, cssClassName) {\n    return element.className && element.className.includes(cssClassName);\n}\n\nclass SharedHooks extends Hooks {\n    setup(attributes) {\n        setImageAndSourcesToDefault(attributes.element, attributes.defaultImagePath, attributes.useSrcset);\n        if (attributes.imagePath) {\n            addCssClassName(attributes.element, cssClassNames.loading);\n        }\n        if (hasCssClassName(attributes.element, cssClassNames.loaded)) {\n            removeCssClassName(attributes.element, cssClassNames.loaded);\n        }\n    }\n    finally(attributes) {\n        addCssClassName(attributes.element, cssClassNames.loaded);\n        removeCssClassName(attributes.element, cssClassNames.loading);\n    }\n    loadImage(attributes) {\n        if (this.skipLazyLoading(attributes)) {\n            // Set the image right away for bots for better SEO\n            return [attributes.imagePath];\n        }\n        const { element, useSrcset, imagePath, decode } = attributes;\n        let img;\n        if (isImageElement(element) && isChildOfPicture(element)) {\n            const parentClone = element.parentNode.cloneNode(true);\n            img = parentClone.getElementsByTagName('img')[0];\n            setSourcesToLazy(img);\n            setImage(img, imagePath, useSrcset);\n        }\n        else {\n            img = new Image();\n            if (isImageElement(element) && element.referrerPolicy) {\n                img.referrerPolicy = element.referrerPolicy;\n            }\n            if (isImageElement(element) && element.sizes) {\n                img.sizes = element.sizes;\n            }\n            if (useSrcset && 'srcset' in img) {\n                img.srcset = imagePath;\n            }\n            else {\n                img.src = imagePath;\n            }\n        }\n        if (decode && img.decode) {\n            return img.decode().then(() => imagePath);\n        }\n        return new Promise((resolve, reject) => {\n            img.onload = () => resolve(imagePath);\n            img.onerror = () => reject(null);\n        });\n    }\n    setErrorImage(error, attributes) {\n        const { element, useSrcset, errorImagePath } = attributes;\n        setImageAndSourcesToError(element, errorImagePath, useSrcset);\n        addCssClassName(element, cssClassNames.failed);\n    }\n    setLoadedImage(imagePath, attributes) {\n        const { element, useSrcset } = attributes;\n        setImageAndSourcesToLazy(element, imagePath, useSrcset);\n    }\n    isDisabled() {\n        // Disable if SSR and the user isn't a bot\n        return isPlatformServer(this.platformId) && !this.isBot();\n    }\n    skipLazyLoading(attributes) {\n        return this.isBot(attributes);\n    }\n    isBot(attributes) {\n        if (this.navigator?.userAgent) {\n            return /googlebot|bingbot|yandex|baiduspider|facebookexternalhit|twitterbot|rogerbot|linkedinbot|embedly|quora\\ link\\ preview|showyoubot|outbrain|pinterest\\/0\\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|duckduckbot/i.test(this.navigator.userAgent);\n        }\n        return false;\n    }\n}\n\nclass IntersectionObserverHooks extends SharedHooks {\n    constructor() {\n        super(...arguments);\n        this.observers = new WeakMap();\n        this.intersectionSubject = new Subject();\n        this.uniqKey = {};\n    }\n    getObservable(attributes) {\n        if (this.skipLazyLoading(attributes)) {\n            return of({ isIntersecting: true });\n        }\n        if (attributes.customObservable) {\n            return attributes.customObservable;\n        }\n        const scrollContainerKey = attributes.scrollContainer || this.uniqKey;\n        const options = {\n            root: attributes.scrollContainer || null,\n        };\n        if (attributes.offset) {\n            options.rootMargin = `${attributes.offset}px`;\n        }\n        let observer = this.observers.get(scrollContainerKey);\n        if (!observer) {\n            observer = new IntersectionObserver((entrys) => this.loadingCallback(entrys), options);\n            this.observers.set(scrollContainerKey, observer);\n        }\n        observer.observe(attributes.element);\n        return Observable.create((obs) => {\n            const subscription = this.intersectionSubject.pipe(filter((entry) => entry.target === attributes.element)).subscribe(obs);\n            return () => {\n                subscription.unsubscribe();\n                observer.unobserve(attributes.element);\n            };\n        });\n    }\n    isVisible(event) {\n        return event.isIntersecting;\n    }\n    loadingCallback(entrys) {\n        entrys.forEach((entry) => this.intersectionSubject.next(entry));\n    }\n}\n\nfunction lazyLoadImage(hooks, attributes) {\n    return (evntObservable) => {\n        return evntObservable.pipe(tap((data) => attributes.onStateChange.emit({ reason: 'observer-emit', data })), filter((event) => hooks.isVisible(event, attributes)), take(1), tap(() => attributes.onStateChange.emit({ reason: 'start-loading' })), mergeMap(() => hooks.loadImage(attributes)), tap(() => attributes.onStateChange.emit({ reason: 'mount-image' })), tap((imagePath) => hooks.setLoadedImage(imagePath, attributes)), tap(() => attributes.onStateChange.emit({ reason: 'loading-succeeded' })), map(() => true), catchError((error) => {\n            attributes.onStateChange.emit({ reason: 'loading-failed', data: error });\n            hooks.setErrorImage(error, attributes);\n            return of(false);\n        }), tap(() => {\n            attributes.onStateChange.emit({ reason: 'finally' });\n            hooks.finally(attributes);\n        }));\n    };\n}\n\nconst LAZYLOAD_IMAGE_HOOKS = new InjectionToken('LazyLoadImageHooks');\n\nclass LazyLoadImageDirective {\n    constructor(el, ngZone, platformId, hooks) {\n        this.onStateChange = new EventEmitter(); // Emits an event on every state change\n        this.elementRef = el;\n        this.ngZone = ngZone;\n        this.propertyChanges$ = new ReplaySubject();\n        this.hooks = hooks;\n        this.hooks.setPlatformId(platformId);\n        this.uid = Math.random().toString(36).substr(2, 9);\n    }\n    ngOnChanges() {\n        if (this.debug === true && !this.debugSubscription) {\n            this.debugSubscription = this.onStateChange.subscribe((e) => console.log(e));\n        }\n        this.propertyChanges$.next({\n            element: this.elementRef.nativeElement,\n            imagePath: this.lazyImage,\n            defaultImagePath: this.defaultImage,\n            errorImagePath: this.errorImage,\n            useSrcset: this.useSrcset,\n            offset: this.offset ? this.offset | 0 : 0,\n            scrollContainer: this.scrollTarget,\n            customObservable: this.customObservable,\n            decode: this.decode,\n            onStateChange: this.onStateChange,\n            id: this.uid,\n        });\n    }\n    ngAfterContentInit() {\n        if (this.hooks.isDisabled()) {\n            return null;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.loadSubscription = this.propertyChanges$\n                .pipe(tap((attributes) => this.hooks.onAttributeChange(attributes)), tap((attributes) => attributes.onStateChange.emit({ reason: 'setup' })), tap((attributes) => this.hooks.setup(attributes)), switchMap((attributes) => {\n                if (!attributes.imagePath) {\n                    return never();\n                }\n                return this.hooks.getObservable(attributes).pipe(lazyLoadImage(this.hooks, attributes));\n            }))\n                .subscribe({\n                next: () => null,\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.propertyChanges$\n            .pipe(take(1))\n            .subscribe({ next: (attributes) => this.hooks.onDestroy(attributes) })\n            .unsubscribe();\n        this.loadSubscription?.unsubscribe();\n        this.debugSubscription?.unsubscribe();\n    }\n}\nLazyLoadImageDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: PLATFORM_ID }, { token: LAZYLOAD_IMAGE_HOOKS }], target: i0.ɵɵFactoryTarget.Directive });\nLazyLoadImageDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: LazyLoadImageDirective, selector: \"[lazyLoad]\", inputs: { lazyImage: [\"lazyLoad\", \"lazyImage\"], defaultImage: \"defaultImage\", errorImage: \"errorImage\", scrollTarget: \"scrollTarget\", customObservable: \"customObservable\", offset: \"offset\", useSrcset: \"useSrcset\", decode: \"decode\", debug: \"debug\" }, outputs: { onStateChange: \"onStateChange\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[lazyLoad]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: Hooks, decorators: [{\n                    type: Inject,\n                    args: [LAZYLOAD_IMAGE_HOOKS]\n                }] }]; }, propDecorators: { lazyImage: [{\n                type: Input,\n                args: ['lazyLoad']\n            }], defaultImage: [{\n                type: Input\n            }], errorImage: [{\n                type: Input\n            }], scrollTarget: [{\n                type: Input\n            }], customObservable: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], useSrcset: [{\n                type: Input\n            }], decode: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], onStateChange: [{\n                type: Output\n            }] } });\n\nclass LazyLoadImageModule {\n}\nLazyLoadImageModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLazyLoadImageModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageModule, declarations: [LazyLoadImageDirective], exports: [LazyLoadImageDirective] });\nLazyLoadImageModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageModule, providers: [{ provide: LAZYLOAD_IMAGE_HOOKS, useClass: IntersectionObserverHooks }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [LazyLoadImageDirective],\n                    exports: [LazyLoadImageDirective],\n                    providers: [{ provide: LAZYLOAD_IMAGE_HOOKS, useClass: IntersectionObserverHooks }],\n                }]\n        }] });\n\nclass Rect {\n    constructor(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    static fromElement(element) {\n        const { left, top, right, bottom } = element.getBoundingClientRect();\n        if (left === 0 && top === 0 && right === 0 && bottom === 0) {\n            return Rect.empty;\n        }\n        else {\n            return new Rect(left, top, right, bottom);\n        }\n    }\n    static fromWindow(_window) {\n        return new Rect(0, 0, _window.innerWidth, _window.innerHeight);\n    }\n    inflate(inflateBy) {\n        this.left -= inflateBy;\n        this.top -= inflateBy;\n        this.right += inflateBy;\n        this.bottom += inflateBy;\n    }\n    intersectsWith(rect) {\n        return rect.left < this.right && this.left < rect.right && rect.top < this.bottom && this.top < rect.bottom;\n    }\n    getIntersectionWith(rect) {\n        const left = Math.max(this.left, rect.left);\n        const top = Math.max(this.top, rect.top);\n        const right = Math.min(this.right, rect.right);\n        const bottom = Math.min(this.bottom, rect.bottom);\n        if (right >= left && bottom >= top) {\n            return new Rect(left, top, right, bottom);\n        }\n        else {\n            return Rect.empty;\n        }\n    }\n}\nRect.empty = new Rect(0, 0, 0, 0);\n\nclass ScrollHooks extends SharedHooks {\n    constructor() {\n        super(...arguments);\n        this.getWindow = () => window;\n        this.scrollListeners = new WeakMap();\n        // Only create one scroll listener per target and share the observable.\n        // Typical, there will only be one observable per application\n        this.getScrollListener = (scrollTarget) => {\n            if (!scrollTarget || typeof scrollTarget.addEventListener !== 'function') {\n                console.warn('`addEventListener` on ' + scrollTarget + ' (scrollTarget) is not a function. Skipping this target');\n                return empty();\n            }\n            const scrollListener = this.scrollListeners.get(scrollTarget);\n            if (scrollListener) {\n                return scrollListener;\n            }\n            const srollEvent = Observable.create((observer) => {\n                const eventName = 'scroll';\n                const handler = (event) => observer.next(event);\n                const options = { passive: true, capture: false };\n                scrollTarget.addEventListener(eventName, handler, options);\n                return () => scrollTarget.removeEventListener(eventName, handler, options);\n            });\n            const listener = this.sampleObservable(srollEvent);\n            this.scrollListeners.set(scrollTarget, listener);\n            return listener;\n        };\n    }\n    getObservable(attributes) {\n        if (this.skipLazyLoading(attributes)) {\n            return of('load');\n        }\n        else if (attributes.customObservable) {\n            return attributes.customObservable.pipe(startWith(''));\n        }\n        else if (attributes.scrollContainer) {\n            return this.getScrollListener(attributes.scrollContainer);\n        }\n        return this.getScrollListener(this.getWindow());\n    }\n    isVisible(event, attributes) {\n        const elementBounds = Rect.fromElement(attributes.element);\n        if (elementBounds === Rect.empty) {\n            return false;\n        }\n        const windowBounds = Rect.fromWindow(this.getWindow());\n        elementBounds.inflate(attributes.offset);\n        if (attributes.scrollContainer) {\n            const scrollContainerBounds = Rect.fromElement(attributes.scrollContainer);\n            const intersection = scrollContainerBounds.getIntersectionWith(windowBounds);\n            return elementBounds.intersectsWith(intersection);\n        }\n        else {\n            return elementBounds.intersectsWith(windowBounds);\n        }\n    }\n    sampleObservable(obs, scheduler) {\n        return obs.pipe(sampleTime(100, scheduler), share(), startWith(''));\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Hooks, IntersectionObserverHooks, LAZYLOAD_IMAGE_HOOKS, LazyLoadImageDirective, LazyLoadImageModule, ScrollHooks, SharedHooks };\n//# sourceMappingURL=ng-lazyload-image.mjs.map\n"],"sourceRoot":"webpack:///"}